<!DOCTYPE html>
<html>
<head>
  <title>Authority Dashboard - Tourist Safety</title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" rel="stylesheet">
  <script src="https://www.gstatic.com/firebasejs/8.10.1/firebase-app.js"></script>
  <script src="https://www.gstatic.com/firebasejs/8.10.1/firebase-database.js"></script>
  <script src="https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&libraries=geometry"></script>
  <style>
    body { font-family: Arial, sans-serif; }
    #map { height: 100vh; width: 100%; }
    .sidebar { height: 100vh; overflow-y: auto; background: #f8f9fa; padding: 1rem; }
    .toast-container { position: fixed; top: 1rem; right: 1rem; z-index: 1055; }
    .status-badge { font-weight: bold; }
    .highlight-update { animation: pulse 2s ease; }
    @keyframes pulse {
      0% { background-color: #fff3cd; }
      100% { background-color: transparent; }
    }
  </style>
</head>
<body>

  <!-- Authority Dashboard -->
  <div id="authority-dashboard" class="container-fluid">
    <div class="row g-0">
      <div class="col-3 sidebar">
        <h4><i class="bi bi-people-fill"></i> Tourists</h4>
        <input type="text" id="searchBox" class="form-control mb-2" placeholder="Search...">
        <select id="statusFilter" class="form-select mb-3">
          <option value="all">All</option>
          <option value="safe">Safe</option>
          <option value="danger">Danger</option>
        </select>
        <ul id="touristList" class="list-group"></ul>

        <h4 class="mt-4"><i class="bi bi-journal-text"></i> Incident Log</h4>
        <table class="table table-striped table-hover table-sm" id="incidentTable">
          <thead><tr><th>Tourist</th><th>Type</th><th>Time</th></tr></thead>
          <tbody></tbody>
        </table>

        <h4 class="mt-4"><i class="bi bi-upc-scan"></i> QR Verification</h4>
        <input type="text" id="qrInput" class="form-control mb-2" placeholder="Enter QR / ID">
        <button class="btn btn-primary w-100 mb-2" onclick="verifyQR()"><i class="bi bi-upc-scan"></i> Verify</button>
        <div id="qrResult"></div>
      </div>
      <div class="col-9 p-0">
        <div id="map"></div>
      </div>
    </div>
  </div>

  <!-- Tourist Details Modal -->
  <div class="modal fade" id="touristModal" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title"><i class="bi bi-person-badge"></i> Tourist Details</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
        </div>
        <div class="modal-body" id="touristDetails"></div>
      </div>
    </div>
  </div>

  <!-- Toasts -->
  <div class="toast-container" id="toastContainer"></div>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  <script>
    const firebaseConfig = { /* your firebase config */ };
    firebase.initializeApp(firebaseConfig);
    const db = firebase.database();

    let map, markers = {};

    function initMap() {
      map = new google.maps.Map(document.getElementById('map'), { center: { lat: 20.5937, lng: 78.9629 }, zoom: 6 });
      loadDangerZones();
      loadAuthorityFeatures();
    }

    function loadDangerZones() {
      db.ref('dangerZones').on('value', snapshot => {
        snapshot.forEach(zone => {
          const coords = zone.val().coords.map(c => ({ lat: c.lat, lng: c.lng }));
          new google.maps.Polygon({ paths: coords, strokeColor: '#FF0000', fillColor: '#FF0000', fillOpacity: 0.3, map });
        });
      });
    }

    function loadAuthorityFeatures() {
      db.ref('tourists').on('value', snapshot => {
        const list = document.getElementById('touristList');
        list.innerHTML = '';
        snapshot.forEach(t => {
          const val = t.val();
          const id = t.key;

          // Sidebar entry
          if (filterTourist(val)) {
            const li = document.createElement('li');
            li.className = 'list-group-item d-flex justify-content-between align-items-center';
            li.innerHTML = `${val.name || 'Tourist'} <span class='badge ${val.status==='danger'?'bg-danger':'bg-success'}'>${val.status}</span>`;
            li.id = `list-${id}`;
            list.appendChild(li);
          }

          // Marker handling
          if (val.lat && val.lng) {
            if (!markers[id]) {
              markers[id] = new google.maps.Marker({ position: { lat: val.lat, lng: val.lng }, map, icon: getMarkerIcon(val.status) });
              markers[id].addListener('click', () => showTouristDetails(id, val));
            } else {
              markers[id].setIcon(getMarkerIcon(val.status));
              markers[id].setPosition({ lat: val.lat, lng: val.lng });

              // Animate marker on update
              markers[id].setAnimation(google.maps.Animation.BOUNCE);
              setTimeout(() => markers[id].setAnimation(null), 1400);

              // Highlight list item
              const li = document.getElementById(`list-${id}`);
              if (li) {
                li.classList.add('highlight-update');
                setTimeout(() => li.classList.remove('highlight-update'), 2000);
              }
            }
          }
        });
      });
    }

    function getMarkerIcon(status) {
      if (status === 'danger') return 'http://maps.google.com/mapfiles/ms/icons/red-dot.png';
      if (status === 'sos') return 'http://maps.google.com/mapfiles/ms/icons/yellow-dot.png';
      return 'http://maps.google.com/mapfiles/ms/icons/green-dot.png';
    }

    function filterTourist(val) {
      const search = document.getElementById('searchBox').value.toLowerCase();
      const filter = document.getElementById('statusFilter').value;
      if (search && !(val.name || '').toLowerCase().includes(search)) return false;
      if (filter !== 'all' && val.status !== filter) return false;
      return true;
    }

    document.getElementById('searchBox').addEventListener('input', loadAuthorityFeatures);
    document.getElementById('statusFilter').addEventListener('change', loadAuthorityFeatures);

    function showTouristDetails(id, val) {
      const html = `
        <p><strong>Name:</strong> ${val.name || 'N/A'}</p>
        <p><strong>Contact:</strong> ${val.contact || 'N/A'}</p>
        <p><strong>Status:</strong> <span class="badge ${val.status==='danger'?'bg-danger':'bg-success'}">${val.status}</span></p>
        <p><strong>Digital ID:</strong> ${id}</p>
        <p><strong>Location:</strong> ${val.lat}, ${val.lng}</p>
        <p><strong>Last Updated:</strong> ${new Date().toLocaleTimeString()}</p>`;
      document.getElementById('touristDetails').innerHTML = html;
      new bootstrap.Modal(document.getElementById('touristModal')).show();
    }

    function logIncident(name, type) {
      const row = `<tr><td>${name}</td><td>${type}</td><td>${new Date().toLocaleTimeString()}</td></tr>`;
      document.querySelector('#incidentTable tbody').insertAdjacentHTML('afterbegin', row);
    }

    function verifyQR() {
      const id = document.getElementById('qrInput').value;
      db.ref('tourists/' + id).once('value').then(snap => {
        if (snap.exists()) {
          document.getElementById('qrResult').innerHTML = `<div class='alert alert-success mt-2'>Verified: ${snap.val().name || 'Tourist'}</div>`;
        } else {
          document.getElementById('qrResult').innerHTML = `<div class='alert alert-danger mt-2'>Not found</div>`;
        }
      });
    }

    function showToast(msg) {
      const toast = document.createElement('div');
      toast.className = 'toast align-items-center text-bg-primary border-0 show mb-2';
      toast.innerHTML = `<div class='d-flex'><div class='toast-body'>${msg}</div><button type='button' class='btn-close btn-close-white me-2 m-auto' data-bs-dismiss='toast'></button></div>`;
      document.getElementById('toastContainer').appendChild(toast);
      setTimeout(() => toast.remove(), 4000);
    }

    window.onload = initMap;
  </script>
</body>
</html>
